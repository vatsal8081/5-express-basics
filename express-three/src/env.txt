- a node.js and express app can run in diffrent enverments and the most basic are development and production enverments

- the enverments are important because base on enverment where we are running the project we can change host, port, 
database configs, can turn on or off debuging and many more things.

- the express apps by default runs in development enverment but we can change if we want

- now we can define diffrent enverment variables and can assign any value to it so base on enverment we can use diffrent 
configs for diffrent enverments

- as you now know that express and node.js it self sets lots of diffrent enverments and we can use them change them and also 
can add new enverment variables as well.

- to get enverment in which our express app is running we have app.get('env') which will get the enverment in which the
express app is running.

- and to get the enverment variables which are set by the node.js we have one global object avalable cald process.env
in hear all the enverment variables which are set by node.js is located and they are internally used by node.js
this enverment variables will be set at the moment the process is started.

- now in express many packages are depandent on one enverment variable cald NODE_ENV and this variable is not set 
automatically by node.js or express so it should be define by us. there are multiple ways to define NODE_ENV and 
many other enverment variable let's see 


- 1) the first way is to add enverment variable before running the nodemon server.js so our process will use those 
enverments when it runs like NODE_ENV=development nodemon server.js


- 2) second way is just to create .env file which will have all this configs in it because it's not ideal way to
right all this configs when we eun the app.

so for that we just create .env file in our project root directory and then add those enverment variable in it.

now we created this file but there is no any way we can read this file and can assign variables to our process when
we start running it.

so for that we use npm package cald dotenv which will give us way to read this file and set variable when process starts

and then we can import this package in server.js because as you know all we store all express related configration  and things 
in the app.js and server related things in server.js so this is server related things

and by doing dotenv.config({path: <path to .env file> }) dotenv will read that file and then set them into 
process.env when we run the process you can check them by loging the process.env



- now by using this env we can define NODE_ENV, PORT, and many more things in future so now base on the development mode 
we can import and configur the morgan for logging can use port defined in env etc.

- there are many diffrent ways in which the developers define and use diffrent envs for development and production but
right now we just need to understand how it's works and then when we will start learning about the ideal structure of
node app we will learn how we can manage and set diffrent envs base on the current enverment we are in.


- now create .env file install the detenv and configur it in server.js and use the port from it in app.js and for morgan so check those files
